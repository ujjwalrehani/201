# File:    design1.txt
# Author:  Ujjwal Rehani
# Date:    3/9/2017 
# Section: 21
# E-mail:  urehani1@umbc.edu 
# Description:
#   This document outlines the functions to be used in projet 1

MIN_NUM = 1         # minimum number allowed
MAX_NUM = 100000    # maximum number allowed

PERF = "Perfect"    # return values for checkForPerfect function
ABD  = "Abundant"
DEF  = "Deficient"
TRI  = "Triangular"  # return values for isTriangular function
SQU = "Sqaure"		 # return values for isSquare function

PRI = "Prime"		# return values for isPrime function
COM = "Composite"
NEI = "Neither"	

######################################################################
# printGreeting() explains the program to the user
# Input:          none
# Output:         none (prints greeting)

    
######################################################################
# getValidInt() reprompts the user until they enter a number
#               between a minimum and maximum (inclusive)
# Input:        minn;   integer of lower accepted range
#               maxx;   integer of upper accepted range
# Output:       newInt; integer between minn and maxx inclusive

 
######################################################################
# isOdd() calculates whether num is odd or not
# Input:  num;      an integer we're checking for oddness
# Output: numIsOdd; a Boolean that says if num is odd
#                   (returns True if odd, False if even)



######################################################################
# printTableHead() prints heading of table
# Input:            none
# Output: 			none (print function)

######################################################################
# printTableLine() Prints the information for one number on one line
                   of the table
# Input:  num,odd,prime,square,tri; num is an integer, and perf is a string
								    odd,prime,square, and tri are Booleans   
# Output:             none(print function)

######################################################################
# isDivisor() returns if one number is a divsor of another
# Input:  origNum, possDiv;  an integer we're checking if it is divisible or not
# Output: numIsDiv; a Boolean that says if possDiv is a valid divisor or not
                   

######################################################################
# sumDivisors() returns the sum of the divisors of a number
# Input:  num;      an integer that will have its divisors added up
# Output: sumDiv;  sum of all the divisors of a number
#                   

######################################################################
# checkForPerfect() calculates whether num is odd or not
# Input:  num;      an integer we're checking for perfectness
# Output: numIsPerf; string says whether a num is perfect, abundant or deficient
                  

######################################################################
# isPrime() calculates whether a number is prime or not
# Input:  num;      an integer we're checking if it is primeness
# Output: numIsPrime; a Boolean that says if num is prime or not
#                     (returns True if prime, False if not)

######################################################################
# isSquare() calculates whether num is square or not
# Input:  num;      an integer we're checking for squareness
# Output: numIsSquare; a Boolean that says if num is square
#                      (returns True if square, False if not)

######################################################################
# isTriangular() calculates whether num is triangular or not
# Input:  num;      an integer we're checking for triangularness
# Output: numIsTri; a Boolean that says if num is triangular
#                   (returns True if triangular, False if not

def main():
    # print the greeting to the user
    printGreeting()

    # get the number range from the user
    getValidInt() x2

    # before we start printing the number info, print the table head
    printTableHead()

    # print out all of the numbers and their properties
    while (from starting number to end):
        # get if the current number is odd, prime, perfect,square,triangular
        isOdd()
        isPrime()
	checkForPerfect()
	isSquare()
	isTriangular()
		
	#prints out all the information for each number
	printTableLine()
        
	#repeat until all numbers in the range have been printed out

main()
